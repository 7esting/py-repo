

Python is an interpreted language, which can save you considerable time during
program development because no compilation and linking is necessary.
The interpreter can be used interactively, which makes it easy to experiment
with features of the language, to write throw-away programs, or to test
functions during bottom-up program development. It is also a handy desk
calculator.

Python enables programs to be written compactly and readably. Programs written
in Python are typically much shorter than equivalent C, C++, or Java programs,
for several reasons:

- the high-level data types allow you to express complex operations in a single
statement;
- statement grouping is done by indentation instead of beginning and
ending brackets;
- no variable or argument declarations are necessary.

Python is extensible: if you know how to program in C it is easy to add a new
built-in function or module to the interpreter, either to perform critical
operations at maximum speed, or to link Python programs to libraries that may
only be available in binary form (such as a vendor-specific graphics library).
Once you are really hooked, you can link the Python interpreter into an
application written in C and use it as an extension or command language for
that application.